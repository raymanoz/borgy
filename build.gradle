plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.41'
    id 'idea'
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    def http4k = '3.172.0'
    compile "org.http4k:http4k-core:$http4k"
    compile "org.http4k:http4k-cloudnative:$http4k"
    compile "org.http4k:http4k-client-okhttp:$http4k"
    compile "org.http4k:http4k-format-jackson:$http4k"
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.5.2")
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.5.2")
    testImplementation "org.http4k:http4k-testing-hamkrest:$http4k"
    testImplementation 'com.natpryce:hamkrest:1.7.0.0'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

test {
    useJUnitPlatform()
}

def webAppFiles = fileTree(dir: project.file('src/main/react/build')).include('**/*')

task uiClean(type: Exec) {
    workingDir 'src/main/react'
    commandLine(['yarn', 'clean'])
}

task uiBuild(type: Exec) {
    workingDir 'src/main/react'
    commandLine(['yarn', 'build'])
}

jar {
    manifest {
        attributes 'Main-Class': 'com.raymanoz.MainKt'
    }
    from(webAppFiles) {
        into 'public'
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
}

jar.dependsOn(['uiBuild'])

clean.dependsOn(['uiClean'])

